type Vertex {
  x: Float!
  y: Float!
}

type Offset {
  x: Float!
  y: Float!
}

type Dim2D {
  sx: Float!
  sy: Float!
}

type DeId {
  deid: Int!
}

type DePlaneId {
  deid: Int!
  bending: Boolean!
}

type DsElecId {
  deid: Int!
  dsid: Int!
}

type DsElecChId {
  deid: Int!
  dsid: Int!
  dsch: Int!
}

type DetElecChId {
  deid: Int!
  padid: Int!
}

type ClusterId {
  id: ID!
}

type Envelop {
  id: ID!
  vertices: [Vertex!]!
}

type BoundingBox {
    xmin: Float!
    ymin: Float!
    xmax: Float!
    ymax: Float!
}

extend type Query {
  boundingBoxDePlane(deid: Int!, bending: Boolean!): BoundingBox!
  envelopDePlane(deid: Int!, bending: Boolean!): Envelop!
  envelopDePlaneDualSampas(deid: Int!, bending: Boolean!): [Envelop]!
}
